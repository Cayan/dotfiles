#!/bin/zsh
# Bash wrappers for docker run commands
# Inspired by Jessie Frazelle's dotfiles.

#
# Helper Functions
#
dcleanup(){
    docker rm -v $(docker ps --filter status=exited -q 2>/dev/null) 2>/dev/null
    docker rmi $(docker images --filter dangling=true -q 2>/dev/null) 2>/dev/null
}
del_stopped(){
    local name=$1
    local state=$(docker inspect --format "{{.State.Running}}" $name 2>/dev/null)

    if [[ "$state" == "false" ]]; then
        docker rm $name
    fi
}
relies_on(){
    local containers=$@

    for container in $containers; do
        local state=$(docker inspect --format "{{.State.Running}}" $container 2>/dev/null)

        if [[ "$state" == "false" ]] || [[ "$state" == "" ]]; then
            echo "$container is not running, starting it for you."
            $container
        fi
    done
}

#
# PHP Related
#
composer(){
    del_stopped composer

    echo "Current working directory: '"$(pwd)"'"
    docker run -it --rm \
        --name composer \
        -v /etc/localtime:/etc/localtime:ro \
        -v $(pwd):/app \
        -v $HOME/.docker/composer:/root/composer \
        -v $HOME/.ssh:/root/.ssh \
        composer/composer "$@"
}

#
# Database related
#
psql(){
    docker exec -it postgres psql -U webadm "$@"
}

#
# Javascript related
#
node(){
    del_stopped node
        #-v $HOME/.docker/node:/usr/local/lib \
    docker run -it --rm \
        -v /etc/localtime:/etc/localtime:ro \
        -v $(pwd):/app \
        -w /app \
        node node "$@"
}
npm(){
    del_stopped node
        #-v $HOME/.docker/node:/usr/local/lib \
    docker run -it --rm \
        -v /etc/localtime:/etc/localtime:ro \
        -v $(pwd):/app \
        -w /app \
        node npm "$@"
}
tns(){
    del_stopped tns

    docker run -it --rm \
        --privileged \
        --name tns \
        -v /etc/localtime:/etc/localtime:ro \
        -v /dev/bus/usb:/dev/bus/usb \
        -v $(pwd):/src \
        oreng/nativescript tns "$@"
}

#
# IDE related
#
atom(){
    #Instalation
    # wget http://raw.githubusercontent.com/jfrazelle/dockerfiles/master/atom/Dockerfile
    # docker build -t atom

    del_stopped atom

    docker run -it --rm \
        --name atom \
        --net host \
        --memory 1gb \
        --device /dev/snd \
        --device /dev/dri \
        --device /dev/video0 \
        -e DISPLAY=unix$DISPLAY \
        -v /etc/localtime:/etc/localtime:ro \
        -v /tmp/.X11-unix:/tmp/.X11-unix \
        -v /dev/shm:/dev/shm \
        -v ~/.docker/atom/.atom:/root/.atom \
        -v ~/.docker/atom/.config:/root/.config \
        atom
}

#
# Jessie's docker dependent files
#
chrome(){
    del_stopped chrome

    # one day remove /etc/hosts bind mount when effing
    # overlay support inotify, such bullshit
    sudo docker run -it \
        --privileged \
        --memory 3gb \
        -v /etc/localtime:/etc/localtime:ro \
        -v /tmp/.X11-unix:/tmp/.X11-unix \
        -e DISPLAY=unix$DISPLAY \
        -v $HOME/Downloads:/root/Downloads \
        -v $HOME/Pictures:/root/Pictures \
        -v $HOME/Torrents:/root/Torrents \
        -v $HOME/.chrome:/data \
            -v /dev/shm:/dev/shm \
            -v /var/lib/dbus:/var/lib/dbus \
            -v /var/run/dbus:/var/run/dbus \
        -v /run/dbus:/run/dbus \
        -v /etc/hosts:/etc/hosts \
        --device /dev/snd \
        --device /dev/dri \
        --device /dev/video0 \
        --device /dev/usb \
        --device /dev/bus/usb \
        --group-add audio \
        --group-add video \
        --name chrome \
        jess/chrome --user-data-dir=/data
}
htop(){
    docker run --rm -it \
        --pid host \
        --net none \
        --name htop \
        jess/htop
}

#
#
#
pulseaudio(){
    del_stopped pulseaudio
        #    -v /dev/shm:/dev/shm \
        #    -v /etc/machine-id:/etc/machine-id \
        #    -v /run/user/$(id -u)/pulse:/run/user/$(id -u)/pulse \
        #    -v /var/lib/dbus:/var/lib/dbus \

    docker run -d \
            -v /etc/localtime:/etc/localtime:ro \
            -v /dev/shm:/dev/shm \
            -v /run/user/$(id -u)/pulse:/run/user/$(id -u)/pulse \
            -v /var/lib/dbus:/var/lib/dbus \
            -v /var/run/dbus:/var/run/dbus \
            --device /dev/snd \
            -p 4713:4713 \
            --restart always \
            --group-add audio \
            --name pulseaudio \
            jess/pulseaudio
}
